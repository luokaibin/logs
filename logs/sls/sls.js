// code generated by pbf v4.0.1

export function readLog(pbf, end) {
    return pbf.readFields(readLogField, {Time: 0, Contents: [], TimeNs: 0}, end);
}
function readLogField(tag, obj, pbf) {
    if (tag === 1) obj.Time = pbf.readVarint();
    else if (tag === 2) obj.Contents.push(readLogContent(pbf, pbf.readVarint() + pbf.pos));
    else if (tag === 4) obj.TimeNs = pbf.readFixed32();
}
export function writeLog(obj, pbf) {
    if (obj.Time) pbf.writeVarintField(1, obj.Time);
    if (obj.Contents) for (const item of obj.Contents) pbf.writeMessage(2, writeLogContent, item);
    if (obj.TimeNs) pbf.writeFixed32Field(4, obj.TimeNs);
}

export function readLogContent(pbf, end) {
    return pbf.readFields(readLogContentField, {Key: "", Value: ""}, end);
}
function readLogContentField(tag, obj, pbf) {
    if (tag === 1) obj.Key = pbf.readString();
    else if (tag === 2) obj.Value = pbf.readString();
}
export function writeLogContent(obj, pbf) {
    if (obj.Key) pbf.writeStringField(1, obj.Key);
    if (obj.Value) pbf.writeStringField(2, obj.Value);
}

export function readLogTag(pbf, end) {
    return pbf.readFields(readLogTagField, {Key: "", Value: ""}, end);
}
function readLogTagField(tag, obj, pbf) {
    if (tag === 1) obj.Key = pbf.readString();
    else if (tag === 2) obj.Value = pbf.readString();
}
export function writeLogTag(obj, pbf) {
    if (obj.Key) pbf.writeStringField(1, obj.Key);
    if (obj.Value) pbf.writeStringField(2, obj.Value);
}

export function readLogGroup(pbf, end) {
    return pbf.readFields(readLogGroupField, {Logs: [], Reserved: "", Topic: "", Source: "", LogTags: []}, end);
}
function readLogGroupField(tag, obj, pbf) {
    if (tag === 1) obj.Logs.push(readLog(pbf, pbf.readVarint() + pbf.pos));
    else if (tag === 2) obj.Reserved = pbf.readString();
    else if (tag === 3) obj.Topic = pbf.readString();
    else if (tag === 4) obj.Source = pbf.readString();
    else if (tag === 6) obj.LogTags.push(readLogTag(pbf, pbf.readVarint() + pbf.pos));
}
export function writeLogGroup(obj, pbf) {
    if (obj.Logs) for (const item of obj.Logs) pbf.writeMessage(1, writeLog, item);
    if (obj.Reserved) pbf.writeStringField(2, obj.Reserved);
    if (obj.Topic) pbf.writeStringField(3, obj.Topic);
    if (obj.Source) pbf.writeStringField(4, obj.Source);
    if (obj.LogTags) for (const item of obj.LogTags) pbf.writeMessage(6, writeLogTag, item);
}

export function readLogGroupList(pbf, end) {
    return pbf.readFields(readLogGroupListField, {logGroupList: []}, end);
}
function readLogGroupListField(tag, obj, pbf) {
    if (tag === 1) obj.logGroupList.push(readLogGroup(pbf, pbf.readVarint() + pbf.pos));
}
export function writeLogGroupList(obj, pbf) {
    if (obj.logGroupList) for (const item of obj.logGroupList) pbf.writeMessage(1, writeLogGroup, item);
}
