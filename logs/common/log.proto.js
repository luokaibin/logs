// code generated by pbf v4.0.1

export function readLogBatch(pbf, end) {
    return pbf.readFields(readLogBatchField, {logs: []}, end);
}
function readLogBatchField(tag, obj, pbf) {
    if (tag === 1) obj.logs.push(pbf.readBytes());
}
export function writeLogBatch(obj, pbf) {
    if (obj.logs) for (const item of obj.logs) pbf.writeBytesField(1, item);
}

export function readLogItem(pbf, end) {
    return pbf.readFields(readLogItemField, {time: 0, level: "", content: "", clientUuid: "", userAgent: "", screen: "", window: "", url: "", ip: "", region: "", referrer: "", sessionId: "", extendedAttributes: {}}, end);
}
function readLogItemField(tag, obj, pbf) {
    if (tag === 1) obj.time = pbf.readVarint(true);
    else if (tag === 2) obj.level = pbf.readString();
    else if (tag === 3) obj.content = pbf.readString();
    else if (tag === 4) obj.clientUuid = pbf.readString();
    else if (tag === 5) obj.userAgent = pbf.readString();
    else if (tag === 6) obj.screen = pbf.readString();
    else if (tag === 7) obj.window = pbf.readString();
    else if (tag === 8) obj.url = pbf.readString();
    else if (tag === 9) obj.ip = pbf.readString();
    else if (tag === 10) obj.region = pbf.readString();
    else if (tag === 11) obj.referrer = pbf.readString();
    else if (tag === 12) obj.sessionId = pbf.readString();
    else if (tag === 13) { const {key, value} = readLogItem_FieldEntry13(pbf, pbf.readVarint() + pbf.pos); obj.extendedAttributes[key] = value; }
}
export function writeLogItem(obj, pbf) {
    if (obj.time) pbf.writeVarintField(1, obj.time);
    if (obj.level) pbf.writeStringField(2, obj.level);
    if (obj.content) pbf.writeStringField(3, obj.content);
    if (obj.clientUuid) pbf.writeStringField(4, obj.clientUuid);
    if (obj.userAgent) pbf.writeStringField(5, obj.userAgent);
    if (obj.screen) pbf.writeStringField(6, obj.screen);
    if (obj.window) pbf.writeStringField(7, obj.window);
    if (obj.url) pbf.writeStringField(8, obj.url);
    if (obj.ip) pbf.writeStringField(9, obj.ip);
    if (obj.region) pbf.writeStringField(10, obj.region);
    if (obj.referrer) pbf.writeStringField(11, obj.referrer);
    if (obj.sessionId) pbf.writeStringField(12, obj.sessionId);
    if (obj.extendedAttributes) for (const key of Object.keys(obj.extendedAttributes)) pbf.writeMessage(13, writeLogItem_FieldEntry13, {key, value: obj.extendedAttributes[key]});
}

export function readLogItem_FieldEntry13(pbf, end) {
    return pbf.readFields(readLogItem_FieldEntry13Field, {key: "", value: ""}, end);
}
function readLogItem_FieldEntry13Field(tag, obj, pbf) {
    if (tag === 1) obj.key = pbf.readString();
    else if (tag === 2) obj.value = pbf.readString();
}
export function writeLogItem_FieldEntry13(obj, pbf) {
    if (obj.key) pbf.writeStringField(1, obj.key);
    if (obj.value) pbf.writeStringField(2, obj.value);
}
